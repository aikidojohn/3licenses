<!--
================================================================================
This file provides the following targets:

    get-svn-properties   - sets the following properies for the source tree:
                             svn.branch   - e.g. trunk
                             svn.revision - latest revision in repository
    
    save-svn-properties  - save svn.brunch and svn.revision properties into
                           a file ${svn.properties.file}
    
    update-svn-properties-file - get-svn-properties + save-svn-properties  
    
Required variables:

    svn.properties.file  - full path to svn properties file (for save-svn-properties)
================================================================================
-->

<project name="svn-targets">
	<property name="svn.cmd" value="svn.exe" />	
	<target name="get-svn-properties" unless="svn.revision">	
    	<fail unless="svn.cmd"/>
    	<fail unless="sourcetree.root"/>   	
		<tempfile property="temp.file.for.get-svn-props"/>
		
		<!-- default value for _svn.info.args (retrieve local svn revision): -->
		<property name="_svn.info.args" value=""/>
		
		<exec dir="${sourcetree.root}" executable="${svn.cmd}" failonerror="true"
		      output="${temp.file.for.get-svn-props}">
			<arg line="info --non-interactive ${_svn.info.args} ."/>
		</exec>
    	
		<loadproperties srcFile="${temp.file.for.get-svn-props}">
			<filterchain>
				<linecontainsregexp><regexp pattern="^URL: "/></linecontainsregexp>
				<tokenfilter><containsregex pattern="^.*/" replace="svn.branch="/></tokenfilter>
			</filterchain>
		</loadproperties>
		<loadproperties srcFile="${temp.file.for.get-svn-props}">
			<filterchain>
				<linecontainsregexp><regexp pattern="^Last Changed Rev: "/></linecontainsregexp>
				<tokenfilter><containsregex pattern="^Last Changed Rev: ([0-9]+)" replace="svn.revision=\1"/></tokenfilter>
			</filterchain>
		</loadproperties>
			
		<delete file="${temp.file.for.get-svn-props}" quiet="true" deleteonexit="true"/>
			
		<echo message="svn.branch   = ${svn.branch}"/>
		<echo message="svn.revision = ${svn.revision}"/>
	</target>

   	<!-- ======================================================================= 
	  Save svn.branch and svn.revision properties into svn-derived.properties
      file.  Subprojects will load this file for 'standalone' builds.
      ==========================================================================
    -->
	<target name="save-svn-properties">
                           	
     	<fail unless="svn.properties.file"/>
       	<fail unless="svn.branch"/>
     	<fail unless="svn.revision"/>
     		
		<echo file="${svn.properties.file}"><![CDATA[
# GENERATED!  DON'T EDIT!  DON'T COMMIT INTO SVN!
svn.branch   = ${svn.branch}
svn.revision = ${svn.revision}
]]></echo>
		<echo message="SVN branch and revision saved in ${svn.properties.file}"/>
	</target>

	<target name="delete-svn-properties-file">
		<delete file="${svn.properties.file}" />
		<delete file="${temp.file.for.get-svn-props}" />
	</target>

	<target name="update-svn-properties-file" depends="get-svn-properties,save-svn-properties" />
</project>
